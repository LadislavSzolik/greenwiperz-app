<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Route;
use Tests\TestCase;

class RouteTest extends TestCase
{
    use RefreshDatabase;

    protected $admin;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->admin = User::find(1);
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function testAllRoute()
    {
        $routeCollection = Route::getRoutes();
        $this->withoutEvents();
        $dynamicReg = "/{\\S*}/";
        foreach ($routeCollection as $route) {
            if (!preg_match($dynamicReg, $route->getUri()) && in_array('GET', $route->getMethods())) {
                $start = $this->microtimeFloat();
                //fwrite(STDERR, print_r('test ' . $route->getUri() . "\n", true));
                $response = $this->call('GET', $route->getUri());
                $end   = $this->microtimeFloat();
                $temps = round($end - $start, 3);
                //fwrite(STDERR, print_r('time: ' . $temps . "\n", true));
                $this->assertLessThan(15, $temps, "too long time for " . $route->getUri());
                $this->assertEquals(200, $response->getStatusCode(), $route->getUri() . "failed to load");
            }
            //dd('test ' . $route->getUrl());

        }

    }
}
